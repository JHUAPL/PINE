:mod:`pine.pipelines.corenlp_NER_pipeline`
==========================================

.. py:module:: pine.pipelines.corenlp_NER_pipeline


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   pine.pipelines.corenlp_NER_pipeline.corenlp_NER



.. data:: config
   

   

.. data:: logger
   

   

.. class:: corenlp_NER(java_dir=None, ner_path=None, load_model=None, tmp_dir=None)


   Bases: :class:`pine.pipelines.pipeline.Pipeline`

   .. attribute:: __jar
      :annotation: = 

      

   .. attribute:: __jdk_dir
      :annotation: = 

      

   .. attribute:: __train_file
      :annotation: = 

      

   .. attribute:: __test_file
      :annotation: = 

      

   .. attribute:: __model
      :annotation: = 

      

   .. attribute:: __temp_dir
      

      

   .. attribute:: __crf
      

      

   .. attribute:: __props
      

      

   .. attribute:: __is_setup
      :annotation: = False

      

   .. attribute:: __id
      

      

   .. attribute:: __default_fit_params
      

      

   .. method:: setup(cls, java_dir=None, ner_path=None)
      :classmethod:


   .. method:: status(self) -> dict


   .. method:: fit(self, X, y, **params)


   .. method:: predict(self, X: Iterable[str]) -> List[DocumentPredictions]


   .. method:: predict_proba(self, X: Iterable[str], get_all_labels=False, include_other=False, **kwargs) -> List[DocumentPredictionProbabilities]


   .. method:: next_example(self, X, Xid)


   .. method:: get_id(self)


   .. method:: format_data(self, X, y)


   .. method:: save_model(self, model_name)


   .. method:: load_model(self, model_name)


   .. method:: tokenize(self, input_text)


   .. method:: evaluate(self, X, y, Xid, verbose=False)


   .. method:: evaluate_orig(self, X, y, Xid)



