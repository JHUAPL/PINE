:py:mod:`pine.pipelines.pmap_ner`
=================================

.. py:module:: pine.pipelines.pmap_ner


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   pine.pipelines.pmap_ner.NER




Attributes
~~~~~~~~~~

.. autoapisummary::

   pine.pipelines.pmap_ner.logger


.. py:data:: logger
   

   

.. py:class:: NER(lib=None, **kwargs)

   Bases: :py:obj:`pine.pipelines.pipeline.Pipeline`

   .. py:attribute:: __lib
      :annotation: = 

      

   .. py:attribute:: pipeline
      

      

   .. py:attribute:: __SUPPORTED_PIPELINES
      :annotation: = ['spacy', 'corenlp', 'opennlp']

      

   .. py:method:: pipe_init(self, x, **kwargs)


   .. py:method:: pipeline_class(self)
      :property:


   .. py:method:: status(self) -> dict


   .. py:method:: fit(self, X, y, **kwargs)


   .. py:method:: predict(self, X: Iterable[str]) -> List[pine.pipelines.pipeline.DocumentPredictions]


   .. py:method:: predict_proba(self, X: Iterable[str], **kwargs) -> List[pine.pipelines.pipeline.DocumentPredictionProbabilities]


   .. py:method:: evaluate(self, X, y, Xid, **kwargs)


   .. py:method:: next_example(self, X, Xid)


   .. py:method:: save_model(self, model_name)


   .. py:method:: load_model(self, model_name)



