:py:mod:`pine.pipelines.spacy_NER_pipeline`
===========================================

.. py:module:: pine.pipelines.spacy_NER_pipeline

.. autoapi-nested-parse::

   For more details, see the documentation:
   * Training: https://spacy.io/usage/training
   * NER: https://spacy.io/usage/linguistic-features#named-entities

   Compatible with: spaCy v2.0.0+



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   pine.pipelines.spacy_NER_pipeline.spacy_NER




Attributes
~~~~~~~~~~

.. autoapisummary::

   pine.pipelines.spacy_NER_pipeline.logger


.. py:data:: logger
   

   

.. py:class:: spacy_NER(model_path=None)

   Bases: :py:obj:`pine.pipelines.pipeline.Pipeline`

   .. py:attribute:: __model
      

      

   .. py:attribute:: __nlp
      :annotation: = []

      

   .. py:attribute:: __ner
      :annotation: = []

      

   .. py:attribute:: __optimizer
      :annotation: = []

      

   .. py:attribute:: __default_fit_params
      

      

   .. py:method:: _load_model(self, model_path=None)


   .. py:method:: status(self) -> dict


   .. py:method:: fit(self, X, y, **params) -> dict


   .. py:method:: evaluate(self, X, y, Xid)


   .. py:method:: predict(self, X: Iterable[str]) -> List[pine.pipelines.pipeline.DocumentPredictions]


   .. py:method:: predict_proba(self, X: Iterable[str], **kwargs) -> List[pine.pipelines.pipeline.DocumentPredictionProbabilities]


   .. py:method:: next_example(self, X, Xid)


   .. py:method:: format_data(self, X, y)


   .. py:method:: add_label(self, entity)


   .. py:method:: save_model(self, model_name)


   .. py:method:: load_model(self, model_name)



