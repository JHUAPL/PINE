:mod:`pine.pipelines.app.listener.service_listener`
===================================================

.. py:module:: pine.pipelines.app.listener.service_listener


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   pine.pipelines.app.listener.service_listener.ServiceRegistration
   pine.pipelines.app.listener.service_listener.ServiceListener



.. data:: config
   

   

.. data:: logger
   

   

.. class:: ServiceRegistration(name, version, channel, framework, framework_types)


   Bases: :class:`object`

   .. method:: from_registration_format(cls, **kwargs)
      :classmethod:


   .. method:: to_registration_format(self)



.. class:: ServiceListener(services=None)


   Bases: :class:`object`

   :type services: list[ServiceRegistration]

   .. attribute:: r_pool
      

      

   .. attribute:: r_conn
      

      

   .. attribute:: registration_poll
      

      

   .. attribute:: listener_poll
      

      

   .. attribute:: processor_poll
      

      

   .. attribute:: processing_limit
      

      

   .. attribute:: processing_queue_key
      

      

   .. attribute:: processing_queue_key_timeout
      

      

   .. attribute:: processing_lock_key
      

      

   .. attribute:: processing_lock_key_timeout
      

      

   .. attribute:: preprocessing_lock_key
      

      

   .. attribute:: preprocessing_lock_key_timeout
      

      

   .. attribute:: preprocessing_worker_lock_key
      

      

   .. attribute:: preprocessing_worker_lock_key_timeout
      

      

   .. attribute:: registration_channel
      

      

   .. method:: publish_response(cls, channel, data)
      :classmethod:

      :type channel: str
      :type data: dict
      :rtype: bool


   .. method:: start_workers(self)


   .. method:: stop_workers(self)


   .. method:: pre_process_message(self, message_channel, message_data)

      :type message_channel: str
      :type message_data: str | bytes
      :rtype: bool | dict


   .. method:: process_message(job_details)
      :staticmethod:


   .. method:: _start_registration_task(self)


   .. method:: _start_channel_task(self)


   .. method:: _start_listener_task(self)


   .. method:: _start_queue_processor_task(self)



