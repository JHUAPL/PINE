:py:mod:`pine.backend.auth.oauth`
=================================

.. py:module:: pine.backend.auth.oauth


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   pine.backend.auth.oauth.OAuthUser
   pine.backend.auth.oauth.OAuthModule




Attributes
~~~~~~~~~~

.. autoapisummary::

   pine.backend.auth.oauth.LOGGER


.. py:data:: LOGGER
   

   

.. py:class:: OAuthUser(data, id_field, display_field=None)

   Bases: :py:obj:`pine.backend.models.AuthUser`

   .. py:method:: id(self)
      :property:


   .. py:method:: username(self)
      :property:


   .. py:method:: display_name(self)
      :property:


   .. py:method:: is_admin(self)
      :property:



.. py:class:: OAuthModule(app, bp, secret, algorithms: List[str] = ['HS256'])

   Bases: :py:obj:`pine.backend.auth.bp.AuthModule`

   .. py:method:: register_oauth(self, oauth, app)
      :abstractmethod:


   .. py:method:: get_login_form_button_text(self)
      :abstractmethod:


   .. py:method:: is_flat(self) -> bool


   .. py:method:: can_manage_users(self) -> bool


   .. py:method:: get_login_form(self) -> pine.backend.models.LoginForm


   .. py:method:: make_user(self, decoded: dict) -> OAuthUser


   .. py:method:: login(self) -> flask.Response


   .. py:method:: _authorize(self, authorization_response)


   .. py:method:: authorize_post(self)


   .. py:method:: authorize_get(self)



